{"version":3,"sources":["style/css_element.js","context/HomePgContext.js","component/contextAPI/input.js","component/contextAPI/put_to_do.js","component/contextAPI/header.js","component/contextAPI/button.js","component/contextAPI/list.js","component/Homepage.js","component/navigateBar.js","Action/ActionType.js","component/redux/input.js","component/redux/put_to_do.js","component/redux/header.js","component/redux/button.js","component/redux/list.js","component/Reduxpage.js","App.js","reportWebVitals.js","store/tasks.js","store/index.js","index.js"],"names":["AddButton","style","input","TextInput","HeadDiv","div","ButtonContainer","DeleteIcon","TextDiv","DynamicRemindStatus","props","task","reminder","Nav","ul","NavOption","li","LinkCSS","Link","HomePgContext","createContext","DataProvider","useState","tasks","id","setTasks","Provider","value","taskContext","children","Input","txt","setTxt","useContext","n_id","SetTask","useCallback","length","tp","type","placeholder","onChange","e","target","onKeyDown","key","prototype","PropTypes","string","isRequired","func","Put_To_Do","onClick","getTasksFromServer","a","fetch","method","response","text","data","JSON","parse","result","Header","homeValue","originTasks","setoriginTasks","SetOriginTasks","useEffect","fetching","setInput","Button_","toggle","delete_","change","setchange","onDoubleClick","newTask","array","bool","List","Toggle","map","Delete_","filter","Homepage","navigateBar","setLegal","to","ActionType","allTask","new","setText","useSelector","state","dispatch","useDispatch","then","res","json","App","className","path","element","Reduxpage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","allReducers","combineReducers","tasksReducer","Store","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"iSAEaA,EAAYC,IAAMC,MAAT,2LASTC,EAAYF,IAAMC,MAAT,kMAUTE,EAAUH,IAAMI,IAAT,+GAOPC,EAAkBL,IAAMI,IAAT,2OAYfE,EAAaN,IAAMI,IAAT,2JASVG,EAAUP,IAAMC,MAAT,mLAUPO,EAAsBR,IAAMI,IAAT,sPAQZ,SAACK,GAAD,OAAYA,EAAMC,KAAKC,SAAW,MAAQ,SAC3C,SAACF,GAAD,OAAYA,EAAMC,KAAKC,SAAW,MAAQ,OAAQ,SAACF,GAAD,OACnEA,EAAMC,KAAKC,SAAW,QAAU,UAGrBC,EAAMZ,IAAMa,GAAT,uLASHC,EAAYd,IAAMe,GAAT,6GAKTC,EAAUhB,YAAMiB,IAANjB,CAAH,uD,OCpFPkB,EAAgBC,0BAEhBC,EAAe,SAACX,GAC3B,MAA0BY,mBAAS,CAAEC,MAAO,GAAIC,GAAI,IAApD,mBAAOD,EAAP,KAAcE,EAAd,KAEA,OACE,cAACN,EAAcO,SAAf,CACEC,MAAO,CACLC,YAAa,CAACL,EAAOE,IAFzB,SAKGf,EAAMmB,YCRPC,EAAQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACdL,EAAQM,qBAAWd,GACzB,cAA0BQ,EAAMC,YAAhC,GAAOL,EAAP,KAAcE,EAAd,KACMS,EAAOX,EAAMC,GACbW,EAAUC,uBACd,SAACT,GACC,KAAIA,EAAMU,QAAU,GAApB,CACA,IAAIC,EAAK,CACPd,GAAIU,EACJP,MAAOA,EACPf,UAAU,GAEZa,EAAS,CAAEF,MAAM,GAAD,mBAAMA,EAAMA,OAAZ,CAAmBe,IAAKd,GAAIU,EAAO,IACnDF,EAAO,OAET,CAACE,EAAMX,EAAOE,EAAUO,IAE1B,OACE,cAAC7B,EAAD,CACEoC,KAAK,OACLC,YAAY,2BACZb,MAAOI,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAOU,EAAEC,OAAOhB,QACjCiB,UAAW,SAACF,GAAD,MAAkB,UAAVA,EAAEG,IAAkBV,EAAQO,EAAEC,OAAOhB,OAAS,OAIvEG,EAAMgB,UAAY,CAChBf,IAAKgB,IAAUC,OAAOC,WACtBjB,OAAQe,IAAUG,KAAKD,YAEVnB,QCHAqB,MA9Bf,YAAqC,IAAhBpB,EAAe,EAAfA,IAAKC,EAAU,EAAVA,OAClBL,EAAQM,qBAAWd,GACzB,cAA0BQ,EAAMC,YAAhC,GAAOL,EAAP,KAAcE,EAAd,KACMS,EAAOX,EAAMC,GAEbW,EAAUC,uBACd,SAACT,GACC,KAAIA,EAAMU,QAAU,GAApB,CACA,IAAIC,EAAK,CACPd,GAAIU,EACJP,MAAOA,EACPf,UAAU,GAEZa,EAAS,CAAEF,MAAM,GAAD,mBAAMA,EAAMA,OAAZ,CAAmBe,IAAKd,GAAIU,EAAO,IACnDF,EAAO,OAET,CAACE,EAAMX,EAAOE,EAAUO,IAG1B,OACE,cAAChC,EAAD,CACEuC,KAAK,SACLZ,MAAM,eACNyB,QAAS,WACPjB,EAAQJ,OCrBVsB,EAAkB,uCAAG,gCAAAC,EAAA,sEACFC,MACrB,6FACA,CAAEC,OAAQ,QAHa,cACnBC,EADmB,gBAKNA,EAASC,OALH,cAKnBC,EALmB,gBAMJC,KAAKC,MAAMF,GAAMA,KANb,cAMnBG,EANmB,yBAQlBA,GARkB,4CAAH,qDA4CTC,MAjCf,WACE,IAAMC,EAAY/B,qBAAWd,GACpBM,EAAT,YAAqBuC,EAAUpC,YAA/B,MACMM,EAAO8B,EAAUpC,YAAY,GAAGJ,GAEtC,EAAsCF,mBAAS,IAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KACMC,EAAiB/B,uBAAY,SAACb,GAClC2C,EAAe3C,KACd,IAEH6C,qBAAU,WAER,IAAMC,EAAQ,uCAAG,4BAAAf,EAAA,sEACID,IADJ,OACTM,EADS,OAEfQ,EAAeR,GAFA,2CAAH,qDAIdU,MACC,CAACF,IACJC,qBAAU,WACK,IAATlC,GAAqC,IAAvB+B,EAAY5B,QAC5BZ,EAAS,CAAEF,MAAO0C,EAAazC,GAAIyC,EAAY5B,OAAS,MAEzD,CAAC4B,EAAa/B,EAAMT,IAEvB,MAA0BH,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcoE,EAAd,KACA,OACE,eAAClE,EAAD,WACE,cAAC,EAAD,CAAO2B,IAAK7B,EAAO8B,OAAQsC,IAC3B,cAAC,EAAD,CAAWvC,IAAK7B,EAAO8B,OAAQsC,QCpCrC,SAASC,EAAT,GAA6C,IAA1B5D,EAAyB,EAAzBA,KAAM6D,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC/B,EAA4BnD,mBAAS,GAArC,mBAAOoD,EAAP,KAAeC,EAAf,KAUA,OACE,cAACrE,EAAD,UACE,eAACG,EAAD,CAAqBE,KAAMA,EAAMiE,cAAe,kBAVpCpD,EAUiDb,EAAKa,GATpEgD,EAAOhD,QACPmD,GAAWD,GAFE,IAAClD,GAUZ,UACE,cAAChB,EAAD,CACEiC,SAAU,SAACC,GAAD,OAREmC,EAQgBnC,EAAEC,OAAOhB,MAP3ChB,EAAKgB,MAAQkD,OACbF,GAAWD,GAFM,IAACG,GASZlD,MAAOhB,EAAKgB,MACZa,YAAY,eAEd,cAACjC,EAAD,CAAY6C,QAAS,kBAAMqB,EAAQ9D,EAAKa,KAAxC,sBAKR+C,EAAQzB,UAAY,CAClBvB,MAAOwB,IAAU+B,MAAM7B,WACvBV,KAAMQ,IAAUgC,KAAK9B,YAERsB,QCFAS,MA/Bf,WACE,IAAMrD,EAAQM,qBAAWd,GACzB,cAA0BQ,EAAMC,YAAhC,GAAOL,EAAP,KAAcE,EAAd,KAEMwD,EAAS7C,uBACb,SAACZ,GACCD,EAAMA,MAAM2D,KAAI,SAACvE,GAAD,OACdA,EAAKa,KAAOA,EAAMb,EAAKC,UAAYD,EAAKC,SAAY,QAGxD,CAACW,IAGG4D,EAAU/C,uBACd,SAACZ,GACCC,EAAS,CACPF,MAAOA,EAAMA,MAAM6D,QAAO,SAACzE,GAAD,OAAUA,EAAKa,KAAOA,KAChDA,GAAID,EAAMC,OAGd,CAACD,EAAOE,IAGV,OACE,mCACGF,EAAMA,MAAM2D,KAAI,SAACvE,GAAD,OACf,cAAC,EAAD,CAAsBA,KAAMA,EAAM6D,OAAQS,EAAQR,QAASU,GAA9CxE,EAAKa,UClBX6D,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCSSC,MAbf,YAAkC,IAAZC,EAAW,EAAXA,SACpB,OACE,eAAC1E,EAAD,WACE,cAACE,EAAD,UACE,cAACE,EAAD,CAASuE,GAAG,cAAZ,0BAEF,cAACzE,EAAD,CAAWqC,QAASmC,EAApB,SACE,cAACtE,EAAD,CAASuE,GAAG,oBAAZ,yB,OCYKC,EAZK,SAAC9B,GACjB,MAAO,CACLpB,KAAM,YACNmD,QAAS/B,IASA8B,EAtBI,SAACjE,EAAIkC,GACpB,MAAO,CACLnB,KAAM,WACNoD,IAAK,CACHnE,GAAIA,EACJG,MAAO+B,EACP9C,UAAU,KAgBH6E,GANO,SAACjE,GACnB,MAAO,CAAEe,KAAM,cAAef,GAAIA,IAKvBiE,GAHO,SAACjE,GACnB,MAAO,CAAEe,KAAM,cAAef,GAAIA,ICCrBM,GAjBD,SAAC,GAAuB,IAArB4B,EAAoB,EAApBA,KAAMkC,EAAc,EAAdA,QACfpE,EAAKqE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,MAAMC,MACxCuE,EAAWC,cAKjB,OACE,cAAC7F,EAAD,CACEoC,KAAK,OACLC,YAAY,2BACZb,MAAO+B,EACPjB,SAAU,SAACC,GAAD,OAAOkD,EAAQlD,EAAEC,OAAOhB,QAClCiB,UAAW,SAACF,GAAD,MAAkB,UAAVA,EAAEG,KATvB+C,EAAQ,SACRG,EAASN,EAAoBjE,EAAIkC,KAQoB,OCC1CP,OAdf,YAAuC,IAAlBO,EAAiB,EAAjBA,KAAMkC,EAAW,EAAXA,QACnBpE,EAAKqE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,MAAMC,MACxCuE,EAAWC,cACjB,OACE,cAAChG,EAAD,CACEuC,KAAK,SACLZ,MAAM,eACNyB,QAAS,WACP2C,EAASN,EAAoBjE,EAAIkC,IACjCkC,EAAQ,QCCD7B,OAVf,WACE,MAAwBzC,mBAAS,IAAjC,mBAAOoC,EAAP,KAAakC,EAAb,KACA,OACE,eAACxF,EAAD,WACE,cAAC,GAAD,CAAOsD,KAAOA,EAAMkC,QAASA,IAC7B,cAAC,GAAD,CAAWlC,KAAMA,EAAMkC,QAASA,QC0BvBrB,OA1Bf,YAA4B,IAAT5D,EAAQ,EAARA,KACXoF,EAAWC,cACjB,EAA4B1E,mBAAS,GAArC,mBAAOoD,EAAP,KAAeC,EAAf,KAMA,OACE,cAACrE,EAAD,UACE,eAACG,EAAD,CACEE,KAAMA,EACNiE,cAAe,kBAAMmB,EAASN,GAAuB9E,EAAKa,MAF5D,UAIE,cAAChB,EAAD,CACEiC,SAAU,SAACC,GAAD,OAZEmC,EAYgBnC,EAAEC,OAAOhB,MAX3ChB,EAAKgB,MAAQkD,OACbF,GAAWD,GAFM,IAACG,GAaZlD,MAAOhB,EAAKgB,MACZa,YAAY,eAEd,cAACjC,EAAD,CAAY6C,QAAS,kBAAM2C,EAASN,GAAuB9E,EAAKa,MAAhE,qBCbOwD,OAVf,WACE,IAAMzD,EAAQsE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,MAAMA,SACjD,OACE,mCACGA,EAAM2D,KAAI,SAACvE,GAAD,OACT,cAAC,GAAD,CAAsBA,KAAMA,GAAfA,EAAKa,UCqBX6D,OA1Bf,WACE,IAAM9D,EAAQsE,aAAY,SAACC,GAAD,OAAWA,EAAMvE,SACrCwE,EAAWC,cAgBjB,OAfA5B,qBAAU,WAEW,IAAb7C,EAAMC,IACR+B,MACE,6FACA,CAAEC,OAAQ,QAETyC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACnC,GACLiC,EAASN,EAAqB3B,EAAOH,YAK5C,CAACpC,EAAOwE,IAET,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,QCPSK,OAdf,WACE,OACE,cAAC,IAAD,UACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,eAAeC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAACC,GAAD,eCApCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCcCnF,GArBD,WAA2C,IAA1CuE,EAAyC,uDAAjC,CAAEvE,MAAO,GAAIC,GAAI,GAAKyF,EAAW,uCAChD1F,EAAQuE,EAAMvE,MACdC,EAAKsE,EAAMtE,GACjB,OAAQyF,EAAO1E,MACb,IAAK,YACH,MAAO,CAAEhB,MAAO0F,EAAOvB,QAASlE,GAAIyF,EAAOvB,QAAQrD,QACrD,IAAK,WACH,MAAO,CAAEd,MAAM,GAAD,mBAAMA,GAAN,CAAa0F,EAAOtB,MAAMnE,GAAIA,EAAK,GACnD,IAAK,cACH,MAAO,CAAED,MAAOA,EAAM6D,QAAO,SAACzE,GAAD,OAAUA,EAAKa,KAAOyF,EAAOzF,MAAKA,GAAIA,GACrE,IAAK,cACH,MAAO,CACLD,MAAOA,EAAM2D,KAAI,SAACvE,GAAD,OACfA,EAAKa,KAAOyF,EAAOzF,GAAnB,6BAA6Bb,GAA7B,IAAmCC,UAAWD,EAAKC,WAAaD,KAElEa,GAAIA,GAER,QACE,OAAOsE,I,SCZEoB,GAHKC,aAAgB,CAClC5F,MAAO6F,KCKHC,GAAQC,aAAYJ,IAE1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOL,GAAjB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,UAINM,SAASC,eAAe,SAM1BnB,O","file":"static/js/main.4d73c3a1.chunk.js","sourcesContent":["import style from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const AddButton = style.input`\r\n    width:45px;\r\n    outline: none;\r\n    border-width: 0;\r\n    color: black;\r\n    border-radius:50px;\r\n    background-color: #3DC7BE;\r\n    font-size:inherit;\r\n`;\r\nexport const TextInput = style.input`\r\n    border-radius: 50px;\r\n    width: 149px;\r\n    height:30px;\r\n    border: 2px solid #000000\r\n    margin-right: 5px;\r\n    padding-left: 5px;\r\n    font-size:inherit;\r\n`;\r\n\r\nexport const HeadDiv = style.div`\r\n    display: flex;\r\n    width: 199px;\r\n    margin:auto;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonContainer = style.div`\r\n    margin:auto;\r\n    margin-bottom: 10px;\r\n    width: 199px;\r\n    min-height: 40px;\r\n    max-height: 40px;\r\n    background-color: bisque;\r\n    &:hover{\r\n        background-color:rgb(188, 161, 126);\r\n    }\r\n`;\r\n\r\nexport const DeleteIcon = style.div`\r\n    color: red;\r\n    position: relative;\r\n    right:5px;\r\n    cursor:pointer;\r\n    &:hover{\r\n        color:lightblue;\r\n    };\r\n`;\r\nexport const TextDiv = style.input`\r\n    height:40px;\r\n    width:80%;\r\n    text-align:left;\r\n    font-size:inherit;\r\n    background-color:transparent;\r\n    border:0px;\r\n    outline:none;\r\n`;\r\n\r\nexport const DynamicRemindStatus = style.div`\r\n    width:100%;\r\n    height:40px;\r\n    display: flex;\r\n    align-items:center;\r\n\r\n    font-size: inherit;\r\n    font-family: KaiTi;\r\n    padding-left: ${(props) => (props.task.reminder ? \"5px\" : \"9px\")};\r\n    border-left: ${(props) => (props.task.reminder ? \"4px\" : \"0\")} ${(props) =>\r\n  props.task.reminder ? \"solid\" : \"none\"} green;        \r\n    cursor:pointer;\r\n`;\r\nexport const Nav = style.ul`\r\n    width:100vw;\r\n    position:absolute;\r\n    top:0;left:0;\r\n    margin:0;\r\n    background-color:lightblue;\r\n    font-size:inherit;\r\n    text-align:left;\r\n`;\r\nexport const NavOption = style.li`\r\n    display:inline-block;\r\n    margin:0 20px 0 20px;\r\n    text-decoration:none;\r\n`;\r\nexport const LinkCSS = style(Link)`\r\n    text-decoration:none;\r\n`;\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const HomePgContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n  const [tasks, setTasks] = useState({ tasks: [], id: 0 });\r\n\r\n  return (\r\n    <HomePgContext.Provider\r\n      value={{\r\n        taskContext: [tasks, setTasks],\r\n      }}\r\n    >\r\n      {props.children}\r\n    </HomePgContext.Provider>\r\n  );\r\n};\r\n","import { useContext, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TextInput } from \"../../style/css_element\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\n\r\nconst Input = ({ txt, setTxt }) => {\r\n  const value = useContext(HomePgContext);\r\n  const [tasks, setTasks] = value.taskContext;\r\n  const n_id = tasks.id;\r\n  const SetTask = useCallback(\r\n    (value) => {\r\n      if (value.length <= 0) return;\r\n      let tp = {\r\n        id: n_id,\r\n        value: value,\r\n        reminder: false,\r\n      };\r\n      setTasks({ tasks: [...tasks.tasks, tp], id: n_id + 1 });\r\n      setTxt(\"\");\r\n    },\r\n    [n_id, tasks, setTasks, setTxt]\r\n  );\r\n  return (\r\n    <TextInput\r\n      type=\"text\"\r\n      placeholder=\"新增任務\"\r\n      value={txt}\r\n      onChange={(e) => setTxt(e.target.value)}\r\n      onKeyDown={(e) => (e.key === \"Enter\" ? SetTask(e.target.value) : \"\")}\r\n    />\r\n  );\r\n};\r\nInput.prototype = {\r\n  txt: PropTypes.string.isRequired,\r\n  setTxt: PropTypes.func.isRequired,\r\n};\r\nexport default Input;\r\n","import { useContext, useCallback } from \"react\";\r\nimport { AddButton } from \"../../style/css_element\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\nfunction Put_To_Do({ txt, setTxt }) {\r\n  const value = useContext(HomePgContext);\r\n  const [tasks, setTasks] = value.taskContext;\r\n  const n_id = tasks.id;\r\n\r\n  const SetTask = useCallback(\r\n    (value) => {\r\n      if (value.length <= 0) return;\r\n      let tp = {\r\n        id: n_id,\r\n        value: value,\r\n        reminder: false,\r\n      };\r\n      setTasks({ tasks: [...tasks.tasks, tp], id: n_id + 1 });\r\n      setTxt(\"\");\r\n    },\r\n    [n_id, tasks, setTasks, setTxt]\r\n  );\r\n\r\n  return (\r\n    <AddButton\r\n      type=\"button\"\r\n      value=\"新增\"\r\n      onClick={() => {\r\n        SetTask(txt);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Put_To_Do;\r\n","import Input from \"./input\";\r\nimport PutButton from \"./put_to_do\";\r\nimport { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport { HeadDiv } from \"../../style/css_element\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\n\r\nconst getTasksFromServer = async () => {\r\n  const response = await fetch(\r\n    \"https://raw.githubusercontent.com/JiaAnTW/json_storage/master/react-tutorial/todolist.json\",\r\n    { method: \"GET\" }\r\n  );\r\n  const data = await response.text();\r\n  const result = await JSON.parse(data).data;\r\n\r\n  return result;\r\n};\r\n\r\nfunction Header() {\r\n  const homeValue = useContext(HomePgContext);\r\n  const [, setTasks] = homeValue.taskContext;\r\n  const n_id = homeValue.taskContext[0].id;\r\n\r\n  const [originTasks, setoriginTasks] = useState([]);\r\n  const SetOriginTasks = useCallback((tasks) => {\r\n    setoriginTasks(tasks);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //fetch one time only\r\n    const fetching = async () => {\r\n      const data = await getTasksFromServer();\r\n      SetOriginTasks(data);\r\n    };\r\n    fetching();\r\n  }, [SetOriginTasks]);\r\n  useEffect(() => {\r\n    if (n_id === 0 && originTasks.length !== 0) {\r\n      setTasks({ tasks: originTasks, id: originTasks.length + 1 });\r\n    }\r\n  }, [originTasks, n_id, setTasks]);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  return (\r\n    <HeadDiv>\r\n      <Input txt={input} setTxt={setInput} />\r\n      <PutButton txt={input} setTxt={setInput} />\r\n    </HeadDiv>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ButtonContainer,\r\n  DeleteIcon,\r\n  DynamicRemindStatus,\r\n  TextDiv,\r\n} from \"../../style/css_element\";\r\n\r\nfunction Button_({ task, toggle, delete_ }) {\r\n  const [change, setchange] = useState(0);\r\n\r\n  const handle = (id) => {\r\n    toggle(id);\r\n    setchange(!change); //force update\r\n  };\r\n  const changeTask = (newTask) => {\r\n    task.value = newTask;\r\n    setchange(!change); //force update\r\n  };\r\n  return (\r\n    <ButtonContainer>\r\n      <DynamicRemindStatus task={task} onDoubleClick={() => handle(task.id)}>\r\n        <TextDiv\r\n          onChange={(e) => changeTask(e.target.value)}\r\n          value={task.value}\r\n          placeholder=\"Empty Task\"\r\n        />\r\n        <DeleteIcon onClick={() => delete_(task.id)}> x </DeleteIcon>\r\n      </DynamicRemindStatus>\r\n    </ButtonContainer>\r\n  );\r\n}\r\nButton_.prototype = {\r\n  tasks: PropTypes.array.isRequired,\r\n  type: PropTypes.bool.isRequired,\r\n};\r\nexport default Button_;\r\n","import { useContext, useCallback } from \"react\";\r\nimport Button from \"./button\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\n\r\nfunction List() {\r\n  const value = useContext(HomePgContext);\r\n  const [tasks, setTasks] = value.taskContext;\r\n\r\n  const Toggle = useCallback(\r\n    (id) => {\r\n      tasks.tasks.map((task) =>\r\n        task.id === id ? (task.reminder = !task.reminder) : \"\"\r\n      );\r\n    },\r\n    [tasks]\r\n  );\r\n\r\n  const Delete_ = useCallback(\r\n    (id) => {\r\n      setTasks({\r\n        tasks: tasks.tasks.filter((task) => task.id !== id),\r\n        id: tasks.id,\r\n      });\r\n    },\r\n    [tasks, setTasks]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {tasks.tasks.map((task) => (\r\n        <Button key={task.id} task={task} toggle={Toggle} delete_={Delete_} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default List;\r\n","import Header from \"./contextAPI/header\";\r\nimport List from \"./contextAPI/list\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <List />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Nav, NavOption,LinkCSS } from \"../style/css_element\";\r\n// import { Link } from \"react-router-dom\";\r\nfunction navigateBar({setLegal}) {\r\n  return (\r\n    <Nav>\r\n      <NavOption>\r\n        <LinkCSS to=\"/to-do-list\">ContextAPI</LinkCSS>\r\n      </NavOption>\r\n      <NavOption onClick={setLegal}>\r\n        <LinkCSS to=\"/to-do-list/redux\">Redux</LinkCSS>\r\n      </NavOption>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default navigateBar;\r\n","const NEW_TASK = (id, text) => {\r\n  return {\r\n    type: \"NEW_TASK\",\r\n    new: {\r\n      id: id,\r\n      value: text,\r\n      reminder: false,\r\n    },\r\n  };\r\n};\r\nconst INIT_TASK = (data) => {\r\n  return {\r\n    type: \"INIT_TASK\",\r\n    allTask: data,\r\n  };\r\n};\r\nconst DELETE_TASK = (id) => {\r\n  return { type: \"DELETE_TASK\", id: id };\r\n};\r\nconst SWITCH_TASK = (id) => {\r\n  return { type: \"SWITCH_TASK\", id: id };\r\n};\r\nexport const ActionType = {\r\n  INIT_TASK: INIT_TASK,\r\n  NEW_TASK: NEW_TASK,\r\n  DELETE_TASK: DELETE_TASK,\r\n  SWITCH_TASK: SWITCH_TASK,\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { ActionType } from \"../../Action/ActionType\";\r\nimport { TextInput } from \"../../style/css_element\";\r\n\r\nconst Input = ({ text, setText }) => {\r\n  const id = useSelector((state) => state.tasks.id);\r\n  const dispatch = useDispatch();\r\n  const setTask = () => {\r\n    setText(\"\");\r\n    dispatch(ActionType.NEW_TASK(id, text));\r\n  };\r\n  return (\r\n    <TextInput\r\n      type=\"text\"\r\n      placeholder=\"新增任務\"\r\n      value={text}\r\n      onChange={(e) => setText(e.target.value)}\r\n      onKeyDown={(e) => (e.key === \"Enter\" ? setTask() : \"\")}\r\n    />\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { AddButton } from \"../../style/css_element\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ActionType } from \"../../Action/ActionType\";\r\nfunction Put_To_Do({ text, setText }) {\r\n  const id = useSelector((state) => state.tasks.id);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <AddButton\r\n      type=\"button\"\r\n      value=\"新增\"\r\n      onClick={() => {\r\n        dispatch(ActionType.NEW_TASK(id, text));\r\n        setText(\"\");\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default Put_To_Do;\r\n","import Input from \"./input\";\r\nimport PutButton from \"./put_to_do\";\r\nimport React, { useState } from \"react\";\r\nimport { HeadDiv } from \"../../style/css_element\";\r\nfunction Header() {\r\n  const [text, setText] = useState(\"\")\r\n  return (\r\n    <HeadDiv>\r\n      <Input text ={text} setText={setText}/>\r\n      <PutButton text={text} setText={setText}/>\r\n    </HeadDiv>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  ButtonContainer,\r\n  DeleteIcon,\r\n  DynamicRemindStatus,\r\n  TextDiv,\r\n} from \"../../style/css_element\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { ActionType } from \"../../Action/ActionType\";\r\nfunction Button_({ task }) {\r\n  const dispatch = useDispatch();\r\n  const [change, setchange] = useState(0);\r\n  const changeTask = (newTask) => {\r\n    task.value = newTask;\r\n    setchange(!change); //force update\r\n  };\r\n\r\n  return (\r\n    <ButtonContainer>\r\n      <DynamicRemindStatus\r\n        task={task}\r\n        onDoubleClick={() => dispatch(ActionType.SWITCH_TASK(task.id))}\r\n      >\r\n        <TextDiv\r\n          onChange={(e) => changeTask(e.target.value)}\r\n          value={task.value}\r\n          placeholder=\"Empty Task\"\r\n        />\r\n        <DeleteIcon onClick={() => dispatch(ActionType.DELETE_TASK(task.id))}>\r\n          x\r\n        </DeleteIcon>\r\n      </DynamicRemindStatus>\r\n    </ButtonContainer>\r\n  );\r\n}\r\nexport default Button_;\r\n","import React from \"react\";\r\n\r\nimport Button from \"./button\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction List() {\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Button key={task.id} task={task} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default List;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Header from \"./redux/header\";\r\nimport List from \"./redux/list\";\r\nimport { ActionType } from \"../Action/ActionType\";\r\nfunction Homepage() {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const fetching = () => {\r\n      if (tasks.id === 0) {\r\n        fetch(\r\n          \"https://raw.githubusercontent.com/JiaAnTW/json_storage/master/react-tutorial/todolist.json\",\r\n          { method: \"GET\" }\r\n        )\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            dispatch(ActionType.INIT_TASK(result.data));\r\n          });\r\n      }\r\n    };\r\n    fetching();\r\n  }, [tasks, dispatch]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <List />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { Route, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport Homepage from \"./component/Homepage\";\r\nimport NavigateBar from \"./component/navigateBar\";\r\nimport Reduxpage from \"./component/Reduxpage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <NavigateBar/>\r\n        <Routes>\r\n          <Route path=\"/to-do-list/\" element={<Homepage />} />\r\n          <Route path=\"/to-do-list/redux\" element={<Reduxpage />} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const tasks = (state = { tasks: [], id: 0 }, action) => {\r\n  const tasks = state.tasks;\r\n  const id = state.id;\r\n  switch (action.type) {\r\n    case \"INIT_TASK\":\r\n      return { tasks: action.allTask, id: action.allTask.length };\r\n    case \"NEW_TASK\":\r\n      return { tasks: [...tasks, action.new], id: id + 1 };\r\n    case \"DELETE_TASK\":\r\n      return { tasks: tasks.filter((task) => task.id !== action.id), id: id };\r\n    case \"SWITCH_TASK\":\r\n      return {\r\n        tasks: tasks.map((task) =>\r\n          task.id === action.id ? { ...task, reminder: !task.reminder } : task\r\n        ),\r\n        id: id,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default tasks;\r\n","import tasksReducer from \"../store/tasks\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  tasks: tasksReducer,\r\n});\r\nexport default allReducers;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport allReducers from \"../src/store\";\r\nimport { createStore } from \"redux\";\r\nimport { DataProvider } from \"./context/HomePgContext\";\r\nconst Store = createStore(allReducers);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={Store}>\r\n      <DataProvider>\r\n        <App />\r\n      </DataProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}