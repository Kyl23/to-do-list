{"version":3,"sources":["style/css_element.js","Action/actionType.js","context/HomePgContext.js","component/contextAPI/input.js","component/contextAPI/put_to_do.js","component/contextAPI/header.js","component/contextAPI/button.js","component/contextAPI/list.js","component/Homepage.js","component/navigateBar.js","component/redux/input.js","component/redux/put_to_do.js","component/redux/header.js","component/redux/button.js","component/redux/list.js","component/Reduxpage.js","App.js","reportWebVitals.js","store/tasks.js","store/index.js","index.js"],"names":["AddButton","style","input","TextInput","HeadDiv","div","ButtonContainer","DeleteIcon","TextDiv","DynamicRemindStatus","props","task","reminder","Nav","ul","NavOption","li","LinkCSS","Link","action","data","type","actionType","INIT_TASK","allTask","id","text","NEW_TASK","new","value","DELETE_TASK","SWITCH_TASK","HomePgContext","createContext","DataProvider","useReducer","state","tasks","length","filter","map","dispatch","Provider","children","Input","txt","setTxt","useContext","SetTask","useCallback","placeholder","onChange","e","target","onKeyDown","key","prototype","PropTypes","string","isRequired","func","Put_To_Do","onClick","PropsTypes","setText","Header","homeValue","n_id","useState","originTasks","setoriginTasks","SetOriginTasks","useEffect","callbackFunc","fetch","method","then","res","json","result","setInput","Button_","toggle","delete_","change","setchange","onDoubleClick","newTask","array","bool","List","Toggle","Delete_","Homepage","navigateBar","setLegal","to","useSelector","useDispatch","App","className","path","element","Reduxpage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","allReducers","combineReducers","tasksReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57ffdd54.chunk.js","sourcesContent":["import style from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const AddButton = style.input`\r\n    width:45px;\r\n    outline: none;\r\n    border-width: 0;\r\n    color: black;\r\n    border-radius:50px;\r\n    background-color: #3DC7BE;\r\n    font-size:inherit;\r\n`;\r\nexport const TextInput = style.input`\r\n    border-radius: 50px;\r\n    width: 149px;\r\n    height:30px;\r\n    border: 2px solid #000000\r\n    margin-right: 5px;\r\n    padding-left: 5px;\r\n    font-size:inherit;\r\n`;\r\n\r\nexport const HeadDiv = style.div`\r\n    display: flex;\r\n    width: 199px;\r\n    margin:auto;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonContainer = style.div`\r\n    margin:auto;\r\n    margin-bottom: 10px;\r\n    width: 199px;\r\n    min-height: 40px;\r\n    max-height: 40px;\r\n    background-color: #FFFFFF;\r\n`;\r\n\r\nexport const DeleteIcon = style.div`\r\n    color: #D81B60;\r\n    position: relative;\r\n    right:5px;\r\n    cursor:pointer;\r\n    &:hover{\r\n        color:lightblue;\r\n    };\r\n`;\r\nexport const TextDiv = style.input`\r\n    height:40px;\r\n    width:80%;\r\n    text-align:left;\r\n    font-size:inherit;\r\n    background-color:transparent;\r\n    border:0px;\r\n    outline:none;\r\n`;\r\n\r\nexport const DynamicRemindStatus = style.div`\r\n    width:100%;\r\n    height:40px;\r\n    display: flex;\r\n    align-items:center;\r\n\r\n    font-size: inherit;\r\n    font-family: KaiTi;\r\n    padding-left: ${(props) => (props.task.reminder ? \"5px\" : \"10px\")};\r\n    border-left: ${(props) => (props.task.reminder ? \"5px\" : \"0\")} ${(props) =>\r\n  props.task.reminder ? \"solid\" : \"none\"} green;        \r\n    cursor:pointer;\r\n`;\r\nexport const Nav = style.ul`\r\n    width:100vw;\r\n    position:absolute;\r\n    top:0;left:0;\r\n    margin:0;\r\n    background-color:lightblue;\r\n    font-size:inherit;\r\n    text-align:left;\r\n`;\r\nexport const NavOption = style.li`\r\n    display:inline-block;\r\n    margin:0 20px 0 20px;\r\n    text-decoration:none;\r\n`;\r\nexport const LinkCSS = style(Link)`\r\n    text-decoration:none;\r\n`;\r\n","const NEW_TASK = (id, text) => {\r\n  return {\r\n    type: actionType.NEW_TASK,\r\n    new: {\r\n      id: id,\r\n      value: text,\r\n      reminder: false,\r\n    },\r\n  };\r\n};\r\nconst INIT_TASK = (data) => {\r\n  return {\r\n    type: actionType.INIT_TASK,\r\n    allTask: data,\r\n  };\r\n};\r\nconst DELETE_TASK = (id) => {\r\n  return { type: actionType.DELETE_TASK, id: id };\r\n};\r\nconst SWITCH_TASK = (id) => {\r\n  return { type: actionType.SWITCH_TASK, id: id };\r\n};\r\nexport const action = {\r\n  INIT_TASK: INIT_TASK,\r\n  NEW_TASK: NEW_TASK,\r\n  DELETE_TASK: DELETE_TASK,\r\n  SWITCH_TASK: SWITCH_TASK,\r\n};\r\n\r\nexport const actionType = {\r\n  INIT_TASK: \"INIT_TASK\",\r\n  NEW_TASK: \"NEW_TASK\",\r\n  DELETE_TASK: \"DELETE_TASK\",\r\n  SWITCH_TASK: \"SWITCH_TASK\",\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { actionType } from \"../Action/actionType\";\r\nexport const HomePgContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n  const reducer = (state = { tasks: [], id: 0 }, action) => {\r\n    const tasks = state.tasks;\r\n    const id = state.id;\r\n    switch (action.type) {\r\n      case actionType.INIT_TASK:\r\n        return { tasks: action.allTask, id: action.allTask.length };\r\n      case actionType.NEW_TASK:\r\n        return { tasks: [...tasks, action.new], id: id + 1 };\r\n      case actionType.DELETE_TASK:\r\n        return { tasks: tasks.filter((task) => task.id !== action.id), id: id };\r\n      case actionType.SWITCH_TASK:\r\n        return {\r\n          tasks: tasks.map((task) =>\r\n            task.id === action.id ? { ...task, reminder: !task.reminder } : task\r\n          ),\r\n          id: id,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  const [tasks, dispatch] = useReducer(reducer, { tasks: [], id: 0 });\r\n  return (\r\n    <HomePgContext.Provider value={[tasks, dispatch]}>\r\n      {props.children}\r\n    </HomePgContext.Provider>\r\n  );\r\n};\r\n","import { useContext, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TextInput } from \"../../style/css_element\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\nimport { action } from \"../../Action/actionType\";\r\n\r\nconst Input = ({ txt, setTxt }) => {\r\n  const [tasks, dispatch] = useContext(HomePgContext);\r\n  const SetTask = useCallback(\r\n    (value) => {\r\n      if (value.length <= 0) return;\r\n      dispatch(action.NEW_TASK(tasks.id,value));\r\n      setTxt(\"\");\r\n    },\r\n    [tasks,dispatch, setTxt]\r\n  );\r\n  return (\r\n    <TextInput\r\n      type=\"text\"\r\n      placeholder=\"新增任務\"\r\n      value={txt}\r\n      onChange={(e) => setTxt(e.target.value)}\r\n      onKeyDown={(e) => (e.key === \"Enter\" ? SetTask(e.target.value) : \"\")}\r\n    />\r\n  );\r\n};\r\nInput.prototype = {\r\n  txt: PropTypes.string.isRequired,\r\n  setTxt: PropTypes.func.isRequired,\r\n};\r\nexport default Input;\r\n","import { useContext, useCallback } from \"react\";\r\nimport PropsTypes from \"prop-types\"\r\nimport { AddButton } from \"../../style/css_element\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\nimport { action } from \"../../Action/actionType\";\r\nfunction Put_To_Do({ txt, setTxt }) {\r\n  const [,dispatch] = useContext(HomePgContext);\r\n\r\n  const SetTask = useCallback(\r\n    (value) => {\r\n      dispatch(action.NEW_TASK(value));\r\n      setTxt(\"\");\r\n    },\r\n    [dispatch, setTxt]\r\n  );\r\n\r\n  return (\r\n    <AddButton\r\n      type=\"button\"\r\n      value=\"新增\"\r\n      onClick={() => {\r\n        SetTask(txt);\r\n      }}\r\n    />\r\n  );\r\n}\r\nPut_To_Do.prototype = {\r\n  text: PropsTypes.string.isRequired,\r\n  setText: PropsTypes.func.isRequired,\r\n};\r\nexport default Put_To_Do;\r\n","import Input from \"./input\";\r\nimport PutButton from \"./put_to_do\";\r\nimport { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport { HeadDiv } from \"../../style/css_element\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\nimport { action } from \"../../Action/actionType\";\r\n\r\nconst getTasksFromServer = (callbackFunc) => {\r\n  fetch(\r\n    \"https://raw.githubusercontent.com/JiaAnTW/json_storage/master/react-tutorial/todolist.json\",\r\n    { method: \"GET\" }\r\n  )\r\n    .then((res) => res.json())\r\n    .then((result) => callbackFunc(result.data));\r\n};\r\n\r\nfunction Header() {\r\n  const [homeValue, dispatch] = useContext(HomePgContext);\r\n\r\n  const n_id = homeValue.id;\r\n\r\n  const [originTasks, setoriginTasks] = useState([]);\r\n  const SetOriginTasks = useCallback((tasks) => {\r\n    setoriginTasks(tasks);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //fetch one time only\r\n    getTasksFromServer(SetOriginTasks);\r\n  }, [SetOriginTasks]);\r\n  useEffect(() => {\r\n    if (n_id === 0 && originTasks.length !== 0) {\r\n      dispatch(action.INIT_TASK(originTasks));\r\n    }\r\n  }, [originTasks, n_id, dispatch]);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  return (\r\n    <HeadDiv>\r\n      <Input txt={input} setTxt={setInput} />\r\n      <PutButton txt={input} setTxt={setInput} />\r\n    </HeadDiv>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ButtonContainer,\r\n  DeleteIcon,\r\n  DynamicRemindStatus,\r\n  TextDiv,\r\n} from \"../../style/css_element\";\r\n\r\nfunction Button_({ task, toggle, delete_ }) {\r\n  const [change, setchange] = useState(0);\r\n\r\n  const handle = (id) => {\r\n    toggle(id);\r\n    setchange(!change); //force update\r\n  };\r\n  const changeTask = (newTask) => {\r\n    task.value = newTask;\r\n    setchange(!change); //force update\r\n  };\r\n  return (\r\n    <ButtonContainer>\r\n      <DynamicRemindStatus task={task} onDoubleClick={() => handle(task.id)}>\r\n        <TextDiv\r\n          onChange={(e) => changeTask(e.target.value)}\r\n          value={task.value}\r\n          placeholder=\"Empty Task\"\r\n        />\r\n        <DeleteIcon onClick={() => delete_(task.id)}> x </DeleteIcon>\r\n      </DynamicRemindStatus>\r\n    </ButtonContainer>\r\n  );\r\n}\r\nButton_.prototype = {\r\n  tasks: PropTypes.array.isRequired,\r\n  type: PropTypes.bool.isRequired,\r\n};\r\nexport default Button_;\r\n","import { useContext, useCallback } from \"react\";\r\nimport Button from \"./button\";\r\nimport { HomePgContext } from \"../../context/HomePgContext\";\r\nimport { action } from \"../../Action/actionType\";\r\n\r\nfunction List() {\r\n  const [tasks, dispatch] = useContext(HomePgContext);\r\n\r\n  const Toggle = useCallback(\r\n    (id) => {\r\n      dispatch(action.SWITCH_TASK(id))\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const Delete_ = useCallback(\r\n    (id) => {\r\n      dispatch(action.DELETE_TASK(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n  \r\n  return (\r\n    <>\r\n      {tasks.tasks.map((task) => (\r\n        <Button key={task.id} task={task} toggle={Toggle} delete_={Delete_} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default List;\r\n","import Header from \"./contextAPI/header\";\r\nimport List from \"./contextAPI/list\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <List />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Nav, NavOption, LinkCSS } from \"../style/css_element\";\r\nfunction navigateBar({ setLegal }) {\r\n  return (\r\n    <Nav>\r\n      <NavOption>\r\n        <LinkCSS to=\"/to-do-list\">ContextAPI</LinkCSS>\r\n      </NavOption>\r\n      <NavOption onClick={setLegal}>\r\n        <LinkCSS to=\"/to-do-list/redux\">Redux</LinkCSS>\r\n      </NavOption>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default navigateBar;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { action } from \"../../Action/actionType\";\r\nimport { TextInput } from \"../../style/css_element\";\r\n\r\nconst Input = ({ text, setText }) => {\r\n  const id = useSelector((state) => state.tasks.id);\r\n  const dispatch = useDispatch();\r\n  const setTask = () => {\r\n    setText(\"\");\r\n    dispatch(action.NEW_TASK(id, text));\r\n  };\r\n  return (\r\n    <TextInput\r\n      type=\"text\"\r\n      placeholder=\"新增任務\"\r\n      value={text}\r\n      onChange={(e) => setText(e.target.value)}\r\n      onKeyDown={(e) => (e.key === \"Enter\" ? setTask() : \"\")}\r\n    />\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport { AddButton } from \"../../style/css_element\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { action } from \"../../Action/actionType\";\r\nfunction Put_To_Do({ text, setText }) {\r\n  const id = useSelector((state) => state.tasks.id);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <AddButton\r\n      type=\"button\"\r\n      value=\"新增\"\r\n      onClick={() => {\r\n        dispatch(action.NEW_TASK(id, text));\r\n        setText(\"\");\r\n      }}\r\n    />\r\n  );\r\n}\r\nPut_To_Do.prototype = {\r\n  text: PropsTypes.string.isRequired,\r\n  setText: PropsTypes.func.isRequired,\r\n};\r\nexport default Put_To_Do;\r\n","import Input from \"./input\";\r\nimport PutButton from \"./put_to_do\";\r\nimport React, { useState } from \"react\";\r\nimport { HeadDiv } from \"../../style/css_element\";\r\nfunction Header() {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <HeadDiv>\r\n      <Input text={text} setText={setText} />\r\n      <PutButton text={text} setText={setText} />\r\n    </HeadDiv>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  ButtonContainer,\r\n  DeleteIcon,\r\n  DynamicRemindStatus,\r\n  TextDiv,\r\n} from \"../../style/css_element\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { action } from \"../../Action/actionType\";\r\nfunction Button_({ task }) {\r\n  const dispatch = useDispatch();\r\n  const [change, setchange] = useState(0);\r\n  const changeTask = (newTask) => {\r\n    task.value = newTask;\r\n    setchange(!change); //force update\r\n  };\r\n\r\n  return (\r\n    <ButtonContainer>\r\n      <DynamicRemindStatus\r\n        task={task}\r\n        onDoubleClick={() => dispatch(action.SWITCH_TASK(task.id))}\r\n      >\r\n        <TextDiv\r\n          onChange={(e) => changeTask(e.target.value)}\r\n          value={task.value}\r\n          placeholder=\"Empty Task\"\r\n        />\r\n        <DeleteIcon onClick={() => dispatch(action.DELETE_TASK(task.id))}>\r\n          x\r\n        </DeleteIcon>\r\n      </DynamicRemindStatus>\r\n    </ButtonContainer>\r\n  );\r\n}\r\nexport default Button_;\r\n","import React from \"react\";\r\n\r\nimport Button from \"./button\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction List() {\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Button key={task.id} task={task} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default List;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Header from \"./redux/header\";\r\nimport List from \"./redux/list\";\r\nimport { action } from \"../Action/actionType\";\r\n\r\nconst getFromServer = () => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/JiaAnTW/json_storage/master/react-tutorial/todolist.json\",\r\n      { method: \"GET\" }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        dispatch(action.INIT_TASK(result.data));\r\n      });\r\n  };\r\n};\r\n\r\nfunction Homepage() {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n      if (tasks.id === 0) {\r\n        dispatch(getFromServer());\r\n      }\r\n  }, [tasks, dispatch]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <List />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { Route, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport Homepage from \"./component/Homepage\";\r\nimport NavigateBar from \"./component/navigateBar\";\r\nimport Reduxpage from \"./component/Reduxpage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <NavigateBar />\r\n        <Routes>\r\n          <Route path=\"/to-do-list/\" element={<Homepage />} />\r\n          <Route path=\"/to-do-list/redux\" element={<Reduxpage />} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { actionType } from \"../Action/actionType\";\r\nconst tasks = (state = { tasks: [], id: 0 }, action) => {\r\n  const tasks = state.tasks;\r\n  const id = state.id;\r\n  switch (action.type) {\r\n    case actionType.INIT_TASK:\r\n      return { tasks: action.allTask, id: action.allTask.length };\r\n    case actionType.NEW_TASK:\r\n      return { tasks: [...tasks, action.new], id: id + 1 };\r\n    case actionType.DELETE_TASK:\r\n      return { tasks: tasks.filter((task) => task.id !== action.id), id: id };\r\n    case actionType.SWITCH_TASK:\r\n      return {\r\n        tasks: tasks.map((task) =>\r\n          task.id === action.id ? { ...task, reminder: !task.reminder } : task\r\n        ),\r\n        id: id,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default tasks;\r\n","import tasksReducer from \"../store/tasks\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  tasks: tasksReducer,\r\n});\r\nexport default allReducers;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport allReducers from \"../src/store\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { DataProvider } from \"./context/HomePgContext\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(allReducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <DataProvider>\r\n        <App />\r\n      </DataProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}